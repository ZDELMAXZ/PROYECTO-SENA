{
  "version": 3,
  "sources": ["../../recursive-key-filter/index.js", "../../remove-graphql-typename/index.js"],
  "sourcesContent": ["/**\r\n * MIT License\r\n * Copyright (c) 2022 Naveen Bharathi\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n*/\r\n\r\n/**\r\n * Filter / Remove keys from an Object | Array recursively.\r\n *\r\n * @param {Object|Array} object  object to filter the keys from\r\n * @param {Array} keysToFilter  array of keys to filter\r\n * @return {Object}  object same as input but without the specified keys\r\n */\r\nfunction recursiveKeyFilter(object, keysToFilter) {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError('The parameter \\'object\\' must be an object.');\r\n  }\r\n  if (typeof keysToFilter !== 'object') {\r\n    throw new TypeError('The parameter \\'keysToFilter\\' must be an array.');\r\n  }\r\n\r\n  let resultObj;\r\n\r\n  if (Array.isArray(object)) {\r\n    resultObj = [];\r\n  } else {\r\n    resultObj = {};\r\n  }\r\n\r\n  Object.keys(object).forEach((key) => {\r\n    // eslint-disable-next-line no-bitwise\r\n    if (~keysToFilter.indexOf(key)) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      (object[key] != null)\r\n      && (typeof object[key] === 'object')\r\n      && Object.keys(object[key]).length\r\n    ) {\r\n      resultObj[key] = recursiveKeyFilter(object[key], keysToFilter);\r\n    } else {\r\n      resultObj[key] = object[key];\r\n    }\r\n  });\r\n\r\n  return resultObj;\r\n}\r\n\r\nmodule.exports = recursiveKeyFilter;\r\n", "/**\r\n * MIT License\r\n * Copyright (c) 2022 Naveen Bharathi\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nconst recursiveKeyFilter = require('recursive-key-filter');\r\n\r\n/**\r\n * Remove __typename from a GraphQL response or object.\r\n *\r\n * @param {Object|Array} obj object to remove __typename from\r\n * @return {Object} object same as input but without the __typename\r\n */\r\nfunction removeTypename(obj) {\r\n  if (typeof obj !== 'object') {\r\n    throw new Error('Provided input is not an object or array.');\r\n  }\r\n\r\n  return recursiveKeyFilter(obj, ['__typename']);\r\n}\r\n\r\nmodule.exports = removeTypename;\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AA8BA,aAAS,mBAAmB,QAAQ,cAAc;AAChD,UAAI,OAAO,WAAW,UAAU;AAC9B,cAAM,IAAI,UAAU,2CAA6C;AAAA,MACnE;AACA,UAAI,OAAO,iBAAiB,UAAU;AACpC,cAAM,IAAI,UAAU,gDAAkD;AAAA,MACxE;AAEA,UAAI;AAEJ,UAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,oBAAY,CAAC;AAAA,MACf,OAAO;AACL,oBAAY,CAAC;AAAA,MACf;AAEA,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,QAAQ;AAEnC,YAAI,CAAC,aAAa,QAAQ,GAAG,GAAG;AAC9B;AAAA,QACF;AAEA,YACG,OAAO,GAAG,KAAK,QACZ,OAAO,OAAO,GAAG,MAAM,YACxB,OAAO,KAAK,OAAO,GAAG,CAAC,EAAE,QAC5B;AACA,oBAAU,GAAG,IAAI,mBAAmB,OAAO,GAAG,GAAG,YAAY;AAAA,QAC/D,OAAO;AACL,oBAAU,GAAG,IAAI,OAAO,GAAG;AAAA,QAC7B;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClEjB;AAAA;AAwBA,QAAM,qBAAqB;AAQ3B,aAAS,eAAe,KAAK;AAC3B,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC7D;AAEA,aAAO,mBAAmB,KAAK,CAAC,YAAY,CAAC;AAAA,IAC/C;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
