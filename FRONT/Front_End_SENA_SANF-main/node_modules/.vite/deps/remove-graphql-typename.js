import {
  __commonJS
} from "./chunk-DFKQJ226.js";

// node_modules/recursive-key-filter/index.js
var require_recursive_key_filter = __commonJS({
  "node_modules/recursive-key-filter/index.js"(exports, module) {
    function recursiveKeyFilter(object, keysToFilter) {
      if (typeof object !== "object") {
        throw new TypeError("The parameter 'object' must be an object.");
      }
      if (typeof keysToFilter !== "object") {
        throw new TypeError("The parameter 'keysToFilter' must be an array.");
      }
      let resultObj;
      if (Array.isArray(object)) {
        resultObj = [];
      } else {
        resultObj = {};
      }
      Object.keys(object).forEach((key) => {
        if (~keysToFilter.indexOf(key)) {
          return;
        }
        if (object[key] != null && typeof object[key] === "object" && Object.keys(object[key]).length) {
          resultObj[key] = recursiveKeyFilter(object[key], keysToFilter);
        } else {
          resultObj[key] = object[key];
        }
      });
      return resultObj;
    }
    module.exports = recursiveKeyFilter;
  }
});

// node_modules/remove-graphql-typename/index.js
var require_remove_graphql_typename = __commonJS({
  "node_modules/remove-graphql-typename/index.js"(exports, module) {
    var recursiveKeyFilter = require_recursive_key_filter();
    function removeTypename(obj) {
      if (typeof obj !== "object") {
        throw new Error("Provided input is not an object or array.");
      }
      return recursiveKeyFilter(obj, ["__typename"]);
    }
    module.exports = removeTypename;
  }
});
export default require_remove_graphql_typename();
//# sourceMappingURL=remove-graphql-typename.js.map
